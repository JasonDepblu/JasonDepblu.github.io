{"ast":null,"code":"import React,{useEffect,useRef}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ThinkingIndicator(_ref){let{id,text='思考中',attempts=0}=_ref;const intervalRef=useRef(null);const dotsRef=useRef(null);// 根据轮询次数选择不同的提示文本\nconst thinkingTexts=['思考中','搜索知识库中','整理回答中','正在生成回答','即将完成'];const currentText=thinkingTexts[Math.min(Math.floor(attempts/6),thinkingTexts.length-1)];// 动画效果\nuseEffect(()=>{let count=0;intervalRef.current=setInterval(()=>{if(dotsRef.current){count=(count+1)%4;dotsRef.current.textContent='.'.repeat(count);}},500);return()=>{if(intervalRef.current){clearInterval(intervalRef.current);}};},[]);return/*#__PURE__*/_jsx(\"div\",{id:id,className:\"ai-message thinking\",children:/*#__PURE__*/_jsxs(\"p\",{children:[text||currentText,/*#__PURE__*/_jsx(\"span\",{ref:dotsRef,className:\"dots\",children:\"...\"})]})});}export default ThinkingIndicator;","map":{"version":3,"names":["React","useEffect","useRef","jsx","_jsx","jsxs","_jsxs","ThinkingIndicator","_ref","id","text","attempts","intervalRef","dotsRef","thinkingTexts","currentText","Math","min","floor","length","count","current","setInterval","textContent","repeat","clearInterval","className","children","ref"],"sources":["/Users/depblu/Documents/GitHub/JasonDepblu.github.io/src/components/ThinkingIndicator.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\n\nfunction ThinkingIndicator({ id, text = '思考中', attempts = 0 }) {\n  const intervalRef = useRef(null);\n  const dotsRef = useRef(null);\n\n  // 根据轮询次数选择不同的提示文本\n  const thinkingTexts = [\n    '思考中',\n    '搜索知识库中',\n    '整理回答中',\n    '正在生成回答',\n    '即将完成'\n  ];\n\n  const currentText = thinkingTexts[Math.min(Math.floor(attempts / 6), thinkingTexts.length - 1)];\n\n  // 动画效果\n  useEffect(() => {\n    let count = 0;\n\n    intervalRef.current = setInterval(() => {\n      if (dotsRef.current) {\n        count = (count + 1) % 4;\n        dotsRef.current.textContent = '.'.repeat(count);\n      }\n    }, 500);\n\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, []);\n\n  return (\n    <div id={id} className=\"ai-message thinking\">\n      <p>\n        {text || currentText}\n        <span ref={dotsRef} className=\"dots\">...</span>\n      </p>\n    </div>\n  );\n}\n\nexport default ThinkingIndicator;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEjD,QAAS,CAAAC,iBAAiBA,CAAAC,IAAA,CAAqC,IAApC,CAAEC,EAAE,CAAEC,IAAI,CAAG,KAAK,CAAEC,QAAQ,CAAG,CAAE,CAAC,CAAAH,IAAA,CAC3D,KAAM,CAAAI,WAAW,CAAGV,MAAM,CAAC,IAAI,CAAC,CAChC,KAAM,CAAAW,OAAO,CAAGX,MAAM,CAAC,IAAI,CAAC,CAE5B;AACA,KAAM,CAAAY,aAAa,CAAG,CACpB,KAAK,CACL,QAAQ,CACR,OAAO,CACP,QAAQ,CACR,MAAM,CACP,CAED,KAAM,CAAAC,WAAW,CAAGD,aAAa,CAACE,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,KAAK,CAACP,QAAQ,CAAG,CAAC,CAAC,CAAEG,aAAa,CAACK,MAAM,CAAG,CAAC,CAAC,CAAC,CAE/F;AACAlB,SAAS,CAAC,IAAM,CACd,GAAI,CAAAmB,KAAK,CAAG,CAAC,CAEbR,WAAW,CAACS,OAAO,CAAGC,WAAW,CAAC,IAAM,CACtC,GAAIT,OAAO,CAACQ,OAAO,CAAE,CACnBD,KAAK,CAAG,CAACA,KAAK,CAAG,CAAC,EAAI,CAAC,CACvBP,OAAO,CAACQ,OAAO,CAACE,WAAW,CAAG,GAAG,CAACC,MAAM,CAACJ,KAAK,CAAC,CACjD,CACF,CAAC,CAAE,GAAG,CAAC,CAEP,MAAO,IAAM,CACX,GAAIR,WAAW,CAACS,OAAO,CAAE,CACvBI,aAAa,CAACb,WAAW,CAACS,OAAO,CAAC,CACpC,CACF,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEjB,IAAA,QAAKK,EAAE,CAAEA,EAAG,CAACiB,SAAS,CAAC,qBAAqB,CAAAC,QAAA,cAC1CrB,KAAA,MAAAqB,QAAA,EACGjB,IAAI,EAAIK,WAAW,cACpBX,IAAA,SAAMwB,GAAG,CAAEf,OAAQ,CAACa,SAAS,CAAC,MAAM,CAAAC,QAAA,CAAC,KAAG,CAAM,CAAC,EAC9C,CAAC,CACD,CAAC,CAEV,CAEA,cAAe,CAAApB,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}