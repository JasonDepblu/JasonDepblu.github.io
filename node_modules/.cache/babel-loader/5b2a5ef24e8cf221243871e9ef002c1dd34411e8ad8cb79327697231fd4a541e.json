{"ast":null,"code":"var _jsxFileName = \"/Users/depblu/Documents/GitHub/JasonDepblu.github.io/src/components/Message.jsx\";\nimport React from 'react';\nimport { marked } from 'marked';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Message({\n  type,\n  content,\n  isStreaming = false,\n  error = false\n}) {\n  // 渲染Markdown内容\n  const renderContent = () => {\n    if (typeof content === 'string') {\n      try {\n        // 对AI消息使用Markdown渲染\n        if (type === 'ai' && !error) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            dangerouslySetInnerHTML: {\n              __html: marked.parse(content)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 18\n          }, this);\n        }\n      } catch (e) {\n        console.error('Markdown渲染错误:', e);\n      }\n    }\n\n    // 默认情况或渲染失败时直接显示文本\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  };\n  const className = `${type}-message ${isStreaming ? 'streaming' : ''} ${error ? 'error-message' : ''}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [renderContent(), isStreaming && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stream-indicator\",\n      children: \"\\u6B63\\u5728\\u751F\\u6210\\u56DE\\u7B54...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_c = Message;\nexport default Message;\nvar _c;\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["React","marked","jsxDEV","_jsxDEV","Message","type","content","isStreaming","error","renderContent","dangerouslySetInnerHTML","__html","parse","fileName","_jsxFileName","lineNumber","columnNumber","e","console","children","className","_c","$RefreshReg$"],"sources":["/Users/depblu/Documents/GitHub/JasonDepblu.github.io/src/components/Message.jsx"],"sourcesContent":["import React from 'react';\nimport { marked } from 'marked';\n\nfunction Message({ type, content, isStreaming = false, error = false }) {\n  // 渲染Markdown内容\n  const renderContent = () => {\n    if (typeof content === 'string') {\n      try {\n        // 对AI消息使用Markdown渲染\n        if (type === 'ai' && !error) {\n          return <div dangerouslySetInnerHTML={{ __html: marked.parse(content) }} />;\n        }\n      } catch (e) {\n        console.error('Markdown渲染错误:', e);\n      }\n    }\n\n    // 默认情况或渲染失败时直接显示文本\n    return <p>{content}</p>;\n  };\n\n  const className = `${type}-message ${isStreaming ? 'streaming' : ''} ${error ? 'error-message' : ''}`;\n\n  return (\n    <div className={className}>\n      {renderContent()}\n      {isStreaming && <div className=\"stream-indicator\">正在生成回答...</div>}\n    </div>\n  );\n}\n\nexport default Message;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,OAAOA,CAAC;EAAEC,IAAI;EAAEC,OAAO;EAAEC,WAAW,GAAG,KAAK;EAAEC,KAAK,GAAG;AAAM,CAAC,EAAE;EACtE;EACA,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAI,OAAOH,OAAO,KAAK,QAAQ,EAAE;MAC/B,IAAI;QACF;QACA,IAAID,IAAI,KAAK,IAAI,IAAI,CAACG,KAAK,EAAE;UAC3B,oBAAOL,OAAA;YAAKO,uBAAuB,EAAE;cAAEC,MAAM,EAAEV,MAAM,CAACW,KAAK,CAACN,OAAO;YAAE;UAAE;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAC5E;MACF,CAAC,CAAC,OAAOC,CAAC,EAAE;QACVC,OAAO,CAACV,KAAK,CAAC,eAAe,EAAES,CAAC,CAAC;MACnC;IACF;;IAEA;IACA,oBAAOd,OAAA;MAAAgB,QAAA,EAAIb;IAAO;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACzB,CAAC;EAED,MAAMI,SAAS,GAAG,GAAGf,IAAI,YAAYE,WAAW,GAAG,WAAW,GAAG,EAAE,IAAIC,KAAK,GAAG,eAAe,GAAG,EAAE,EAAE;EAErG,oBACEL,OAAA;IAAKiB,SAAS,EAAEA,SAAU;IAAAD,QAAA,GACvBV,aAAa,CAAC,CAAC,EACfF,WAAW,iBAAIJ,OAAA;MAAKiB,SAAS,EAAC,kBAAkB;MAAAD,QAAA,EAAC;IAAS;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CAAC;AAEV;AAACK,EAAA,GA1BQjB,OAAO;AA4BhB,eAAeA,OAAO;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}